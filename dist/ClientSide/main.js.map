{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/api-routing.config.ts","./src/api.config.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dto/event.dto.ts","./src/app/dto/flag.dto.ts","./src/app/login/devLoginDefaults.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login/login.component.ts","./src/app/login/login/login.component.html","./src/app/login/services/login.service.ts","./src/app/main/main-routing.module.ts","./src/app/main/main.module.ts","./src/app/main/main/main.component.ts","./src/app/main/main/main.component.html","./src/app/search/search-routing.module.ts","./src/app/search/search.module.ts","./src/app/search/search/search.component.ts","./src/app/search/search/search.component.html","./src/app/shared/menu/menu.component.ts","./src/app/shared/menu/menu.component.html","./src/app/shared/services/crypto-manager.service.ts","./src/app/shared/services/crypto.dto.ts","./src/app/shared/services/pg/pg-query.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","const backendOpts = {\r\n  port: '',\r\n  host: '',\r\n  apiRoute: 'api',\r\n};\r\n\r\nexport const backendUrl = `${backendOpts.host}${backendOpts.port}/${backendOpts.apiRoute}`;\r\n","export const login = '/login';\r\nexport const cryptoService = '/crypto_service';\r\nexport const getAllEvents = '/get_all_events';\r\nexport const getEventPersons = '/get_event_persons';\r\nexport const getPersonsTelephones = '/get_person_telephones';\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'ClentSide';\n}\n","<!-- NG-ZORRO -->\r\n<!-- <a\r\n  href=\"https://github.com/NG-ZORRO/ng-zorro-antd\"\r\n  target=\"_blank\"\r\n  style=\"\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n    width: 100%;\r\n  \"\r\n>\r\n  <img\r\n    height=\"300\"\r\n    src=\"https://img.alicdn.com/tfs/TB1X.qJJgHqK1RjSZFgXXa7JXXa-89-131.svg\"\r\n  />\r\n</a> -->\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { IconDefinition } from '@ant-design/icons-angular';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\r\nimport { ru_RU } from 'ng-zorro-antd/i18n';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport ru from '@angular/common/locales/ru';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nregisterLocaleData(ru);\r\n\r\nimport { LoginModule } from './login/login.module';\r\nimport { MainModule } from './main/main.module';\r\nimport { SearchModule } from './search/search.module';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport {\r\n  NumberOutline,\r\n  CloudServerOutline,\r\n  DatabaseOutline,\r\n  UserOutline,\r\n  SettingOutline,\r\n  EyeOutline,\r\n  FormOutline,\r\n  ToolOutline,\r\n  HomeOutline,\r\n} from '@ant-design/icons-angular/icons';\r\n\r\nconst icons: IconDefinition[] = [\r\n  NumberOutline,\r\n  CloudServerOutline,\r\n  DatabaseOutline,\r\n  UserOutline,\r\n  SettingOutline,\r\n  EyeOutline,\r\n  FormOutline,\r\n  ToolOutline,\r\n  HomeOutline,\r\n];\r\n\r\nconst root: Routes = [{ path: '**', redirectTo: '/login' }];\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    LoginModule,\r\n    MainModule,\r\n    SearchModule,\r\n    SharedModule,\r\n    RouterModule.forRoot(root),\r\n    NzIconModule.forRoot(icons),\r\n  ],\r\n  providers: [{ provide: NZ_I18N, useValue: ru_RU }],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { IPerson } from './person.dto';\r\nimport { stateFlag } from './flag.dto';\r\n\r\nexport interface IEvent {\r\n  additional: string | null;\r\n  category: string | null;\r\n  detention_by: string | null;\r\n  detention_date: string | null;\r\n  detention_reason: string | null;\r\n  detention_time: string | null;\r\n  id: number | null;\r\n  keeping_place: string | null;\r\n  persons: IPerson[];\r\n  state: stateFlag;\r\n  importPoolState: boolean;\r\n  expand?: boolean;\r\n}\r\n\r\nexport const IEventHeaders = {\r\n  id: 'ID',\r\n  category: 'Категория',\r\n  detention_by: 'Кем задержан',\r\n  detention_reason: 'Повод задержания',\r\n  keeping_place: 'Место хранения',\r\n  detention_date: 'Дата задержания',\r\n  detention_time: 'Время задержания',\r\n  additional: 'Дополнительная информация',\r\n  buttons: ' ',\r\n};\r\n\r\nexport const emptyEvent = {\r\n  additional: '',\r\n  category: '',\r\n  detention_by: '',\r\n  detention_date: '',\r\n  detention_reason: '',\r\n  detention_time: '',\r\n  id: null,\r\n  keeping_place: '',\r\n  persons: [] as IPerson[],\r\n  state: stateFlag.isReaded,\r\n  importPoolState: false,\r\n};\r\n","export enum stateFlag {\r\n  isReaded,\r\n  isUpdated,\r\n  isAdded,\r\n  isRemoved,\r\n}\r\n","export const devloginData = {\r\n  host: 'localhost',\r\n  port: 5439,\r\n  user: 'postgres',\r\n  database: 'postgres',\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [{ path: 'login', component: LoginComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NzInputModule,\r\n    LoginRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    NzButtonModule,\r\n    HttpClientModule,\r\n  ],\r\n})\r\nexport class LoginModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, interval } from 'rxjs';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { devloginData } from '../devLoginDefaults';\r\nimport { LoginService } from '../services/login.service';\r\nimport { Router } from '@angular/router';\r\nimport { CryptoManagerService } from '../../shared/services/crypto-manager.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent {\r\n  loginForm = new FormGroup({\r\n    host: new FormControl(devloginData.host),\r\n    port: new FormControl(devloginData.port),\r\n    database: new FormControl(devloginData.database),\r\n    user: new FormControl(devloginData.user),\r\n  });\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private cryptoManager: CryptoManagerService\r\n  ) {}\r\n\r\n  onLogin() {\r\n    const sub = this.loginService\r\n      .login(this.loginForm.value)\r\n      .subscribe((res) => {\r\n        console.log(res);\r\n        const { isLogged, uuid } = res;\r\n\r\n        if (isLogged && uuid) {\r\n          this.cryptoManager.upService(uuid);\r\n          this.router.navigate(['main']);\r\n          sub.unsubscribe();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n  <h1>Записная книжка 2.0</h1>\r\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\r\n    <nz-input-group [nzPrefix]=\"host\" [nzCompact]=\"true\">\r\n      <input type=\"text\" nz-input placeholder=\"Host\" formControlName=\"host\" />\r\n    </nz-input-group>\r\n    <nz-input-group [nzPrefix]=\"port\" [nzCompact]=\"true\">\r\n      <input type=\"text\" nz-input placeholder=\"Port\" formControlName=\"port\" />\r\n    </nz-input-group>\r\n    <nz-input-group [nzPrefix]=\"database\" [nzCompact]=\"true\">\r\n      <input\r\n        type=\"text\"\r\n        nz-input\r\n        placeholder=\"Database\"\r\n        formControlName=\"database\"\r\n      />\r\n    </nz-input-group>\r\n    <nz-input-group [nzPrefix]=\"username\" [nzCompact]=\"true\">\r\n      <input\r\n        type=\"text\"\r\n        nz-input\r\n        placeholder=\"Username\"\r\n        formControlName=\"user\"\r\n      />\r\n    </nz-input-group>\r\n    <div class=\"button-layout\">\r\n      <button type=\"submit\" nz-button nzType=\"primary\">Login</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<ng-template #host>\r\n  <i nz-icon nzType=\"cloud-server\" nzTheme=\"outline\"></i>\r\n</ng-template>\r\n<ng-template #port>\r\n  <i nz-icon nzType=\"number\" nzTheme=\"outline\"></i>\r\n</ng-template>\r\n<ng-template #database>\r\n  <i nz-icon nzType=\"database\" nzTheme=\"outline\"></i>\r\n</ng-template>\r\n<ng-template #username>\r\n  <i nz-icon nzType=\"user\" nzTheme=\"outline\"></i>\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { backendUrl } from '../../../api-routing.config';\r\nimport { login } from '../../../api.config';\r\n\r\nconst httpOptions = new HttpHeaders();\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n  constructor(public http: HttpClient) {}\r\n\r\n  login(loginData: any) {\r\n    return this.http\r\n      .post<any>(backendUrl + login, loginData, {\r\n        headers: httpOptions,\r\n        responseType: 'json',\r\n      })\r\n      .pipe(catchError(async (err) => console.log(err)));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainComponent } from './main/main.component';\r\n\r\nconst routes: Routes = [{ path: 'main', component: MainComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MainRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MainComponent } from './main/main.component';\r\nimport { MainRoutingModule } from './main-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NzTableModule } from 'ng-zorro-antd/table';\r\nimport { NzCardModule } from 'ng-zorro-antd/card';\r\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { FormsModule } from '@angular/forms';\r\n@NgModule({\r\n  declarations: [MainComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MainRoutingModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    NzTableModule,\r\n    NzCardModule,\r\n    NzAvatarModule,\r\n    NzModalModule,\r\n    NzInputModule,\r\n  ],\r\n})\r\nexport class MainModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IEvent, emptyEvent } from '../../dto/event.dto';\r\nimport { PgQueryService } from '../../shared/services/pg/pg-query.service';\r\nimport { CryptoManagerService } from '../../shared/services/crypto-manager.service';\r\nimport { stateFlag } from '../../dto/flag.dto';\r\nimport { IPerson } from '../../dto/person.dto';\r\nimport { ITelephone } from '../../dto/telephone.dto';\r\nimport { IContact } from '../../dto/contact.dto';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n})\r\nexport class MainComponent implements OnInit {\r\n  eventTable: IEvent[] = [];\r\n  selectedEvent: IEvent = { ...emptyEvent };\r\n  editPersonModal = {\r\n    person: {} as IPerson,\r\n    state: false as boolean,\r\n  };\r\n  // editPersonPopupVisability = false;\r\n\r\n  constructor(\r\n    private pgQueryService: PgQueryService,\r\n    public cryptoManagerService: CryptoManagerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllEvents();\r\n  }\r\n\r\n  getAllEvents() {\r\n    const sub = this.pgQueryService\r\n      .getAllEvents()\r\n      .subscribe((res: Uint8Array[]) => {\r\n        const events: IEvent[] = this.cryptoManagerService.decode(res).rows;\r\n        this.eventTable = events.map((ev) => {\r\n          ev.persons = [];\r\n          ev.state = stateFlag.isReaded;\r\n          ev.importPoolState = false;\r\n          return ev;\r\n        });\r\n        sub.unsubscribe();\r\n      });\r\n  }\r\n\r\n  onTableClick(e: MouseEvent, event: IEvent, index: number) {\r\n    const selectedRow: HTMLTableRowElement = e.currentTarget as HTMLTableRowElement;\r\n    const table: HTMLTableElement = selectedRow.parentElement as HTMLTableElement;\r\n    const selectedRowClassName = 'selected-row';\r\n    for (let i = 0; i < table.rows.length; i++) {\r\n      const localRow = table.rows.item(i);\r\n      if (localRow.classList.contains(selectedRowClassName)) {\r\n        localRow.classList.remove(selectedRowClassName);\r\n        break;\r\n      }\r\n    }\r\n    selectedRow.classList.add(selectedRowClassName);\r\n    this.selectedEvent = event;\r\n    const sub = this.pgQueryService\r\n      .getPersonsOfEvent(event.id)\r\n      .subscribe((res: Uint8Array[]) => {\r\n        let persons: IPerson[] = this.cryptoManagerService.decode(res).rows;\r\n\r\n        persons = persons.map((per: IPerson) => {\r\n          per.state = stateFlag.isReaded;\r\n          return per;\r\n        });\r\n        this.selectedEvent.persons = event.persons = persons;\r\n        sub.unsubscribe();\r\n      });\r\n  }\r\n\r\n  editPerson(person: IPerson) {\r\n    const sub = this.pgQueryService\r\n      .getTelephonesOfPerson(person.id)\r\n      .subscribe((res: Uint8Array[]) => {\r\n        const telephones: ITelephone[] = this.cryptoManagerService.decode(res)\r\n          .rows;\r\n        telephones.forEach((tel) => {\r\n          tel.contacts.forEach((contact: IContact) => {\r\n            contact.state = stateFlag.isReaded;\r\n          });\r\n          tel.state = stateFlag.isReaded;\r\n          tel.expand = false;\r\n        });\r\n        person.telephones = telephones;\r\n        this.editPersonModal.person = { ...person };\r\n        this.editPersonModal.person.telephones = [...person.telephones];\r\n        sub.unsubscribe();\r\n        this.handleEditPersonPopup();\r\n      });\r\n  }\r\n\r\n  handleEditPersonPopup() {\r\n    this.editPersonModal.state = !this.editPersonModal.state;\r\n  }\r\n}\r\n","<app-menu></app-menu>\r\n<div class=\"menu-container\">\r\n  <nz-table #events class=\"events-table\" [nzData]=\"eventTable\">\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Категория</th>\r\n        <th>Кем задержан</th>\r\n        <th>Повод задержания</th>\r\n        <th>Место хранения</th>\r\n        <th>Дата задержания</th>\r\n        <th>Время задержания</th>\r\n        <th>Дополнительная информация</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr\r\n        *ngFor=\"let data of events.data; let i = index\"\r\n        (click)=\"onTableClick($event, data, i)\"\r\n      >\r\n        <td>{{ data.id }}</td>\r\n        <td>{{ data.category }}</td>\r\n        <td>{{ data.detention_by }}</td>\r\n        <td>{{ data.detention_reason }}</td>\r\n        <td>{{ data.keeping_place }}</td>\r\n        <td>{{ data.detention_date }}</td>\r\n        <td>{{ data.detention_time }}</td>\r\n        <td>{{ data.additional }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </nz-table>\r\n  <div class=\"person-browser\">\r\n    <ng-template ngFor let-person [ngForOf]=\"selectedEvent.persons\">\r\n      <nz-card\r\n        class=\"person-browser-card\"\r\n        [nzActions]=\"[actionOpen, actionEdit]\"\r\n      >\r\n        <nz-card-meta\r\n          [nzTitle]=\"person.name+ ' ' + person.lastname + ' ' + person.midname\"\r\n          [nzDescription]=\"'Кличка: '+person.alias\"\r\n          [nzAvatar]=\"avatarTemplate\"\r\n        ></nz-card-meta>\r\n        <ng-template #avatarTemplate>\r\n          <nz-avatar [nzSize]=\"64\" nzIcon=\"user\"></nz-avatar>\r\n        </ng-template>\r\n        <ng-template #actionOpen>\r\n          <i>\r\n            <img src=\"../../../assets/svgIcons/eye.svg\" alt=\"\" />\r\n          </i>\r\n        </ng-template>\r\n        <ng-template #actionEdit>\r\n          <i (click)=\"editPerson(person)\">\r\n            <img src=\"../../../assets/svgIcons/edit.svg\" alt=\"\" />\r\n          </i>\r\n        </ng-template>\r\n      </nz-card>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n\r\n<nz-modal\r\n  [(nzVisible)]=\"editPersonModal.state\"\r\n  [nzTitle]=\"nzModalTitle\"\r\n  (nzOnCancel)=\"handleEditPersonPopup()\"\r\n  [nzWidth]=\"'70vw'\"\r\n>\r\n  <ng-template #nzModalTitle>\r\n    <h3>\r\n      Редактирование фигуранта\r\n      <b\r\n        >{{editPersonModal.person.name}} {{editPersonModal.person.lastname}}\r\n        {{editPersonModal.person.midname}}</b\r\n      >\r\n    </h3>\r\n  </ng-template>\r\n  <ng-container *nzModalContent>\r\n    <input\r\n      nz-input\r\n      placeholder=\"Basic  usage\"\r\n      [(ngModel)]=\"editPersonModal.person.name\"\r\n    />\r\n    <input\r\n      nz-input\r\n      placeholder=\"Basic  usage\"\r\n      [(ngModel)]=\"editPersonModal.person.lastname\"\r\n    />\r\n    <input\r\n      nz-input\r\n      placeholder=\"Basic  usage\"\r\n      [(ngModel)]=\"editPersonModal.person.midname\"\r\n    />\r\n    <input\r\n      nz-input\r\n      placeholder=\"Basic  usage\"\r\n      [(ngModel)]=\"editPersonModal.person.alias\"\r\n    />\r\n    <nz-table\r\n      #telephonesTable\r\n      [nzData]=\"editPersonModal.person.telephones\"\r\n      [nzPageSize]=\"10\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          <th>Номер телефона</th>\r\n          <th>Старый</th>\r\n          <th>Международный</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <ng-template ngFor let-data [ngForOf]=\"telephonesTable.data\">\r\n          <tr>\r\n            <td [(nzExpand)]=\"data.expand\"></td>\r\n            <td>{{data.number}}</td>\r\n            <td>{{data.oldnum}}</td>\r\n            <td>{{data.internum}}</td>\r\n          </tr>\r\n          <tr [nzExpand]=\"data.expand\">\r\n            <nz-table\r\n              #contactsTable\r\n              [nzData]=\"data.contacts\"\r\n              nzSize=\"middle\"\r\n              [nzShowPagination]=\"false\"\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>Номер телефона</th>\r\n                  <th>Кличка</th>\r\n                  <th>Старый</th>\r\n                  <th>Международный</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let contact of contactsTable.data\">\r\n                  <td>{{contact.number}}</td>\r\n                  <td>{{contact.alias}}</td>\r\n                  <td>{{contact.oldnum}}</td>\r\n                  <td>{{contact.internum}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </nz-table>\r\n          </tr>\r\n        </ng-template>\r\n      </tbody>\r\n    </nz-table>\r\n  </ng-container>\r\n</nz-modal>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SearchComponent } from './search/search.component';\r\n\r\nconst routes: Routes = [{ path: 'search', component: SearchComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SearchRoutingModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchComponent } from './search/search.component';\nimport { SearchRoutingModule } from './search-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzCardModule } from 'ng-zorro-antd/card';\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { SharedModule } from '../shared/shared.module';\nimport { NzBreadCrumbModule } from 'ng-zorro-antd/breadcrumb';\n\n@NgModule({\n  declarations: [SearchComponent],\n  imports: [\n    CommonModule,\n    SearchRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NzTableModule,\n    NzCardModule,\n    NzAvatarModule,\n    NzInputModule,\n    NzButtonModule,\n    SharedModule,\n    NzBreadCrumbModule,\n  ],\n})\nexport class SearchModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { IEvent } from '../../dto/event.dto';\nimport { stateFlag } from '../../dto/flag.dto';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent implements OnInit {\n  searchForm = new FormGroup({\n    eventCategory: new FormControl(''),\n    eventDetentionBy: new FormControl(''),\n    eventDetentionDate: new FormControl(''),\n    eventDetentioReason: new FormControl(''),\n    eventKeepingPlace: new FormControl(''),\n    personName: new FormControl(''),\n    personLastname: new FormControl(''),\n    personMidname: new FormControl(''),\n    personAlias: new FormControl(''),\n    telephoneNumber: new FormControl(''),\n    contactNumber: new FormControl(''),\n    contactAlias: new FormControl(''),\n  });\n  serchResults: IEvent[] = [\n    {\n      additional: '-',\n      category: 'Угон авто',\n      detention_by: '№17/10',\n      detention_date: '10.12.19',\n      id: 0,\n      detention_reason: 'Подозреваемые',\n      detention_time: '20:50',\n      importPoolState: false,\n      keeping_place: '№20/12',\n      state: stateFlag.isReaded,\n      expand: true,\n      persons: [\n        {\n          name: 'Михаил',\n          lastname: 'Петров',\n          midname: 'Евгеньевич',\n          id: 2,\n          alias: 'Мишка',\n          state: stateFlag.isReaded,\n          telephones: [],\n        },\n        {\n          name: 'Иван',\n          lastname: 'Иванов',\n          midname: 'Иванович',\n          id: 2,\n          alias: 'Ванька',\n          state: stateFlag.isReaded,\n          telephones: [],\n        },\n        {\n          name: 'Семен',\n          lastname: 'Семенов',\n          midname: 'Семенович',\n          id: 2,\n          alias: 'Семка',\n          state: stateFlag.isReaded,\n          telephones: [],\n        },\n      ],\n    },\n    {\n      additional: '-',\n      category: 'Угон авто',\n      detention_by: '№35/11',\n      detention_date: '21.11.19',\n      id: 1,\n      detention_reason: 'Подозреваемые',\n      detention_time: '10:06',\n      importPoolState: false,\n      keeping_place: '№20/12',\n      state: stateFlag.isReaded,\n      expand: true,\n      persons: [\n        {\n          name: 'Евгений',\n          lastname: 'Сидоров',\n          midname: 'Евгеньевич',\n          id: 2,\n          alias: 'Женька',\n          state: stateFlag.isReaded,\n          telephones: [],\n        },\n        {\n          name: 'Михаил',\n          lastname: 'Петров',\n          midname: 'Евгеньевич',\n          id: 2,\n          alias: 'Мишка',\n          state: stateFlag.isReaded,\n          telephones: [],\n        },\n      ],\n    },\n  ];\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSearch() {}\n}\n","<app-menu></app-menu>\n<div class=\"bread-crumb\">\n  <nz-breadcrumb>\n    <nz-breadcrumb-item>\n      <i nz-icon nzType=\"home\"></i>\n    </nz-breadcrumb-item>\n    <nz-breadcrumb-item>\n      <i nz-icon nzType=\"tool\"></i><span>Инструменты</span>\n    </nz-breadcrumb-item>\n    <nz-breadcrumb-item> Поиск </nz-breadcrumb-item>\n  </nz-breadcrumb>\n</div>\n\n<div class=\"search-container\">\n  <div class=\"search-results\">\n    <h2>Результаты поиска</h2>\n\n    <nz-table\n      #events\n      class=\"events-table\"\n      [nzData]=\"serchResults\"\n      [nzBordered]=\"true\"\n      [nzShowPagination]=\"false\"\n    >\n      <thead>\n        <tr>\n          <th [nzWidth]=\"'10px'\">ID</th>\n          <th [nzWidth]=\"'20px'\">Категория</th>\n          <th [nzWidth]=\"'30px'\">Кем задержан</th>\n          <th [nzWidth]=\"'30px'\">Повод задержания</th>\n          <th [nzWidth]=\"'30px'\">Место хранения</th>\n          <th [nzWidth]=\"'20px'\">Дата</th>\n          <th [nzWidth]=\"'20px'\">Время</th>\n          <th [nzWidth]=\"'40px'\">Дополнительная информация</th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-template ngFor let-data [ngForOf]=\"events.data\">\n          <tr>\n            <td>{{ data.id }}</td>\n            <td>{{ data.category }}</td>\n            <td>{{ data.detention_by }}</td>\n            <td>{{ data.detention_reason }}</td>\n            <td>{{ data.keeping_place }}</td>\n            <td>{{ data.detention_date }}</td>\n            <td>{{ data.detention_time }}</td>\n            <td>{{ data.additional }}</td>\n          </tr>\n\n          <div class=\"persons-row\">\n            <ng-template ngFor let-person [ngForOf]=\"data.persons\">\n              <nz-card class=\"person-browser-card\">\n                <nz-card-meta\n                  [nzTitle]=\"person.name+ ' ' + person.lastname + ' ' + person.midname\"\n                  [nzDescription]=\"'Кличка: '+person.alias\"\n                  [nzAvatar]=\"avatarTemplate\"\n                ></nz-card-meta>\n                <ng-template #avatarTemplate>\n                  <nz-avatar [nzSize]=\"64\" nzIcon=\"user\"></nz-avatar>\n                </ng-template>\n              </nz-card>\n            </ng-template>\n          </div>\n        </ng-template>\n      </tbody>\n    </nz-table>\n  </div>\n\n  <div class=\"input-container\">\n    <form [formGroup]=\"searchForm\" (ngSubmit)=\"onSearch()\">\n      <h3>Событие</h3>\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Категория\"\n        formControlName=\"eventCategory\"\n      />\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Кем задержан\"\n        formControlName=\"eventDetentionBy\"\n      />\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Дата задержания\"\n        formControlName=\"eventDetentionDate\"\n      />\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Причина задержания\"\n        formControlName=\"eventDetentioReason\"\n      />\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Место хранения\"\n        formControlName=\"eventKeepingPlace\"\n      />\n      <h3>Фигурант дела</h3>\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Имя\"\n        formControlName=\"personName\"\n      />\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Фамилия\"\n        formControlName=\"personLastname\"\n      />\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Отчество\"\n        formControlName=\"personMidname\"\n      />\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Кличка\"\n        formControlName=\"personAlias\"\n      />\n      <h3>Телефон</h3>\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Номер телефона\"\n        formControlName=\"telephoneNumber\"\n      />\n      <h3>Контакт</h3>\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Номер телефона\"\n        formControlName=\"contactNumber\"\n      />\n      <input\n        type=\"text\"\n        nz-input\n        placeholder=\"Кличка\"\n        formControlName=\"contactAlias\"\n      />\n      <div class=\"button-layout\">\n        <button type=\"submit\" nz-button nzType=\"primary\">Поиск</button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss'],\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  // TODO: иконка настроек не работает\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  searchClicked() {\r\n    this.router.navigate(['/search']);\r\n  }\r\n}\r\n","<ul nz-menu nzMode=\"horizontal\">\r\n  <li nz-submenu nzTitle=\"Просмотр\" nzIcon=\"eye\">\r\n    <ul>\r\n      <li nz-menu-item>Записные книги</li>\r\n      <li nz-menu-item>Служебные</li>\r\n    </ul>\r\n  </li>\r\n  <li nz-submenu nzTitle=\"Изменение\" nzIcon=\"form\">\r\n    <ul>\r\n      <li nz-menu-item>Добавить</li>\r\n      <li nz-menu-item>Редактировать</li>\r\n      <li nz-menu-item>Удалить</li>\r\n    </ul>\r\n  </li>\r\n  <li nz-submenu nzSelected nzTitle=\"Инструменты\" nzIcon=\"tool\">\r\n    <ul>\r\n      <li nz-menu-item>Экспорт</li>\r\n      <li nz-menu-item>Импорт</li>\r\n      <li nz-menu-item>Анализ</li>\r\n      <li nz-submenu nzSelected nzTitle=\"Поиск\">\r\n        <ul>\r\n          <li nz-menu-item>Быстрый поиск</li>\r\n          <li nz-menu-item nzSelected (click)=\"searchClicked()\">\r\n            Расширенный поиск\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n  <li nz-menu-item>\r\n    <i nz-icon nzType=\"setting\" nzTheme=\"outline\"></i>\r\n    Настройки\r\n  </li>\r\n</ul>\r\n","import { Injectable } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport * as aesjs from 'aes-js';\r\nimport { backendUrl } from '../../../api-routing.config';\r\nimport { cryptoService } from '../../../api.config';\r\nimport { statusCode } from './crypto.dto';\r\nimport { catchError, share } from 'rxjs/operators';\r\n\r\nconst httpOptions = new HttpHeaders();\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CryptoManagerService {\r\n  aes; // AES crypto\r\n  private defaultPassword = 'eab88efa463a5820';\r\n  // updatingTime: number = 10000 //600000 //10 minutes\r\n  // cryptoService$: Observable<number> = interval(this.updatingTime)\r\n  cryptoServiceSub: Subscription;\r\n\r\n  constructor(private http: HttpClient, private cs: CookieService) {\r\n    console.log(this.cryptoServiceSub);\r\n    if (!!!this.aes) {\r\n      if (this.cs.check('hash')) {\r\n        this.aes = new aesjs.AES(\r\n          this.passwordToArrayHandler(this.cs.get('hash'))\r\n        );\r\n        // if (!!!this.cryptoServiceSub)\r\n        //   this.cryptoServiceSub = this.cryptoService$.subscribe((_) =>\r\n        //     this.updateKey()\r\n        //   )\r\n      }\r\n    }\r\n  }\r\n\r\n  upService(uuid: string) {\r\n    this.setKey(uuid);\r\n    // if (!!!this.cryptoServiceSub)\r\n    //   this.cryptoServiceSub = this.cryptoService$.subscribe((_) =>\r\n    //     this.updateKey()\r\n    //   )\r\n  }\r\n\r\n  updateKey() {\r\n    const sub = this.http\r\n      .post<any>(\r\n        backendUrl + cryptoService,\r\n        { code: statusCode.updateKey },\r\n        { headers: httpOptions, responseType: 'json' }\r\n      )\r\n      .pipe(\r\n        catchError(async (err) => console.log(err)),\r\n        share()\r\n      )\r\n      .subscribe((res) => {\r\n        console.log(res);\r\n        if (res) {\r\n          this.setKey(res.resolved.uuid);\r\n        }\r\n\r\n        sub.unsubscribe();\r\n      });\r\n  }\r\n\r\n  setKey(uuid: string) {\r\n    const slicedKey = uuid.slice(3, 8) + uuid.slice(24, -1);\r\n    this.aes = new aesjs.AES(this.passwordToArrayHandler(slicedKey)); // Have setted key to encoder\r\n    this.cs.set('hash', slicedKey);\r\n\r\n    const sub = this.http\r\n      .post<any>(\r\n        `${backendUrl}/crypto_service`,\r\n        { code: statusCode.keyIsUpdated },\r\n        { headers: httpOptions, responseType: 'json' }\r\n      )\r\n      .pipe(catchError(async (err) => console.log(err)))\r\n      .subscribe((res) => {\r\n        sub.unsubscribe();\r\n      });\r\n  }\r\n\r\n  encode(data: any, password?: string): Uint8Array[] {\r\n    const dataString = JSON.stringify(data);\r\n    let dataArray = Array.from(aesjs.utils.utf8.toBytes(dataString));\r\n\r\n    dataArray = this.arraySizeHandler(dataArray);\r\n    let encodingResult = [];\r\n    for (let i = 1; i <= dataArray.length / 16; i++) {\r\n      const batch = dataArray.slice((i - 1) * 16, i * 16);\r\n      const encryptedBytes = this.aes.encrypt(batch);\r\n      encodingResult = encodingResult.concat([...encryptedBytes]);\r\n    }\r\n    return encodingResult;\r\n  }\r\n\r\n  decode(data, password?: string) {\r\n    data = this.arraySizeHandler(data);\r\n\r\n    if (this.isPasswordRight(data, this.aes)) {\r\n      let decodingResult = [];\r\n      for (let i = 1; i <= data.length / 16; i++) {\r\n        const batch = data.slice((i - 1) * 16, i * 16);\r\n        const encryptedBytes = this.aes.decrypt(batch);\r\n        decodingResult = decodingResult.concat([...encryptedBytes]);\r\n      }\r\n      const strResult = aesjs.utils.utf8\r\n        .fromBytes(decodingResult)\r\n        .replace(/\\0/g, '');\r\n      const res = JSON.parse(strResult);\r\n      return res;\r\n    } else {\r\n      return 'Error: Password is wrong';\r\n    }\r\n  }\r\n\r\n  isPasswordRight = (data, aes = undefined, password = undefined) => {\r\n    const batch = data.slice(0, 16);\r\n    let encryptedBytes: any;\r\n\r\n    if (!!aes) {\r\n      encryptedBytes = aes.decrypt(batch);\r\n    } else if (!!password) {\r\n      const localAes = new aesjs.AES(this.passwordToArrayHandler(password));\r\n      encryptedBytes = localAes.decrypt(batch);\r\n    }\r\n\r\n    if (\r\n      encryptedBytes[0] !== 123 && // char {\r\n      encryptedBytes[0] !== 91 // char [\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  private arraySizeHandler = (dataArray) => {\r\n    if (dataArray.length % 16 !== 0) {\r\n      const lengthOfZeros =\r\n        (Math.floor(dataArray.length / 16) + 1) * 16 - dataArray.length;\r\n      const additionalArray = new Array(lengthOfZeros).fill(0);\r\n      dataArray = dataArray.concat([...additionalArray]);\r\n    }\r\n    return dataArray;\r\n  };\r\n\r\n  private passwordToArrayHandler = (password) => {\r\n    const encoder: TextEncoder = new TextEncoder();\r\n    const passwordArray = new Uint8Array(16);\r\n    encoder.encodeInto(password, passwordArray);\r\n    return passwordArray;\r\n  };\r\n\r\n  getDefaultPassword() {\r\n    return this.defaultPassword;\r\n  }\r\n}\r\n","export const statusCode = {\r\n  updateKey: 2414,\r\n  keyIsUpdated: 4142,\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { backendUrl } from '../../../../api-routing.config';\r\nimport {\r\n  getAllEvents,\r\n  getEventPersons,\r\n  getPersonsTelephones,\r\n} from '../../../../api.config';\r\nimport { CryptoManagerService } from '../crypto-manager.service';\r\n\r\nconst httpOptions = new HttpHeaders();\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PgQueryService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private cryptoManagerService: CryptoManagerService\r\n  ) {}\r\n\r\n  getAllEvents() {\r\n    return this.http\r\n      .get<Uint8Array[]>(backendUrl + getAllEvents)\r\n      .pipe(catchError(async (err) => console.log(err)));\r\n  }\r\n\r\n  getPersonsOfEvent(eventId: number) {\r\n    return this.http\r\n      .post<Uint8Array[]>(\r\n        backendUrl + getEventPersons,\r\n        this.cryptoManagerService.encode({ eventId }),\r\n        { headers: httpOptions, responseType: 'json' }\r\n      )\r\n      .pipe(catchError(async (err) => console.log(err)));\r\n  }\r\n\r\n  getTelephonesOfPerson(personId: number) {\r\n    return this.http\r\n      .post<Uint8Array[]>(\r\n        backendUrl + getPersonsTelephones,\r\n        this.cryptoManagerService.encode({ personId }),\r\n        { headers: httpOptions, responseType: 'json' }\r\n      )\r\n      .pipe(catchError(async (err) => console.log(err)));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { IconDefinition } from '@ant-design/icons-angular';\r\n\r\nimport { SettingOutline } from '@ant-design/icons-angular/icons';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nconst icons: IconDefinition[] = [SettingOutline];\r\n@NgModule({\r\n  declarations: [MenuComponent],\r\n  imports: [BrowserModule, CommonModule, NzMenuModule, RouterModule],\r\n  exports: [MenuComponent],\r\n})\r\nexport class SharedModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}